name: Salesforce Build Pipeline - QA

on:
  push:
    branches:
      - build/QA       # Deploy happens on push to QA branch
  pull_request:
    branches:
      - build/QA       # Validation happens on PR to QA branch

permissions:
  contents: read
  pull-requests: write

jobs:
  # -------------------------------
  # 1️⃣ Validate PR before merge
  # -------------------------------
  validate-on-pr:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - name: ⬇️ Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 🧰 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: 🛠️ Install Salesforce CLI & Git Delta
        shell: bash
        run: |
          npm install -g @salesforce/cli@latest
          echo y | sfdx plugins:install sfdx-git-delta

      - name: 🔐 Authenticate to Salesforce (JWT)
        shell: bash
        run: |
          sf org login jwt \
            --client-id ${{ secrets.CONSUMER_KEY }} \
            --jwt-key-file asset/server.key \
            --username ${{ secrets.USER_NAME }} \
            --instance-url https://login.salesforce.com \
            --set-default

      - name: Get Last Successful Commit ID
        id: get-commit
        uses: actions/github-script@v7
        with:
          script: |
            const branchName = `${{ github.event.pull_request.base.ref }}`;
            const response = await github.rest.actions.listWorkflowRunsForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
              branch: branchName,
              status: 'success',
              per_page: 1
            });
            if (response.data.workflow_runs.length > 0) {
              const lastSuccessfulCommitId = response.data.workflow_runs[0].head_sha;
              return lastSuccessfulCommitId;
            } else {
              const exec = require('child_process').execSync;
              const previousCommitId = exec('git rev-parse HEAD^', { encoding: 'utf8' }).trim();
              return previousCommitId;
            }
          result-encoding: string

      - name: Store Last Commit ID
        run: echo "PREV_COMMIT_ID=${{ steps.get-commit.outputs.result }}" >> $GITHUB_ENV

      - name: Generate SFDX Git Delta
        id: deltaChanges
        shell: pwsh
        run: |
          $prevCommitId = "$env:PREV_COMMIT_ID"
          mkdir delta
          sfdx sgd:source:delta --from $prevCommitId --to HEAD --output delta/ --generate-delta

          if (Test-Path -Path "delta/src") {
            $isChangesFound = $true
          } else {
            $isChangesFound = $false
          }
          echo "isCodeChanges=$isChangesFound" >> $env:GITHUB_OUTPUT

      - name: Upload Delta as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: salesforce-build-artifacts
          path: |
            delta/**
            Assets/**
            pipeline_scripts/**
            sfdx-project.json

    outputs:
      isCode: ${{ steps.deltaChanges.outputs.isCodeChanges }}


  # -------------------------------
  # 2️⃣ Deploy to QA after merge / push
  # -------------------------------
  deploy-to-qa:
    if: github.event_name == 'push'           # Only runs on push
    runs-on: ubuntu-latest
    needs: validate-on-pr                     # Wait for validation if triggered via PR
    steps:
      - name: ⬇️ Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 🧰 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: 🛠️ Install Salesforce CLI & Plugins
        shell: bash
        run: |
          npm install -g @salesforce/cli@latest
          echo y | sfdx plugins:install sfdx-git-delta

      - name: Download Delta Artifact
        uses: actions/download-artifact@v4
        with:
          name: salesforce-build-artifacts
          path: ${{ github.workspace }}

      - name: 🔐 Authenticate to QA Org
        shell: bash
        run: |
          sf org login jwt \
            --client-id ${{ secrets.CONSUMER_KEY }} \
            --jwt-key-file asset/server.key \
            --username ${{ secrets.USER_NAME }} \
            --instance-url https://login.salesforce.com \
            --set-default

      - name: Detect LWC Changes
        id: lwcChanges
        shell: bash
        run: |
          git diff --name-only ${{ env.PREV_COMMIT_ID }} HEAD | grep "force-app/main/default/lwc" || true > lwc_changes.txt
          if [ -s lwc_changes.txt ]; then
            echo "isLwcChanges=true" >> $GITHUB_OUTPUT
          else
            echo "isLwcChanges=false" >> $GITHUB_OUTPUT

      - name: 🚀 Deploy Delta / LWC
        shell: bash
        run: |
          TARGET_USERNAME="${{ secrets.USER_NAME }}"

          if [ -f delta/package/package.xml ]; then
            echo "📦 Deploying delta package..."
            sf project deploy start --manifest delta/package/package.xml --target-org $TARGET_USERNAME --wait 10 --verbose
          elif [ "${{ steps.lwcChanges.outputs.isLwcChanges }}" == "true" ]; then
            echo "⚡ Delta empty but LWC changed, deploying full LWC folder..."
            sf project deploy start --source-path force-app/main/default/lwc --target-org $TARGET_USERNAME --wait 10 --verbose
          else
            echo "✅ No deployable changes found"
