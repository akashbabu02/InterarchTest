name: Salesforce QA Pipeline with Fortify

on:
  push:
    branches:
      - build/QA
  pull_request:
    branches:
      - build/QA

jobs:
  fortify-scan:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout repository 
      - name: â¬‡ Checkout code
        uses: actions/checkout@v4

      # Step 2: Setup Node.js (required for Salesforce CLI)
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      # Step 3: Install Salesforce CLI
      - name: Install Salesforce CLI
        run: npm install -g @salesforce/cli@latest

      # Step 4: Authenticate to Salesforce Org using JWT
      - name: Authenticate to Salesforce Org
        run: |
          sf org login jwt \
            --client-id ${{ secrets.CONSUMER_KEY }} \
            --jwt-key-file asset/server.key \
            --username minuscule@admin.com \
            --instance-url https://login.salesforce.com \
            --set-default

      # Step 5: Run Fortify scan using official GitHub Action
      - name: Fortify AST Scan
        uses: fortify/github-action@v2.1.1
        with:
          sast-scan: true
          debricked-sca-scan: true 
        env:
          FOD_URL: https://fortify.com
          FOD_TENANT: ${{ secrets.FORTIFY_TENENT }}
          FOD_USER: ${{ secrets.USER_NAME }}
          FOD_PASSWORD: ${{ secrets.FORTIFY_PASSWORD }}
          FOD_RELEASE: SalesforceQA:test
          FOD_SCAN_TARGET: ./force-app/main/default/lwc
          DO_WAIT: true
          DO_EXPORT: true

      # Step 6: Confirm scan info
      - name: Confirm Scan Info
        run: |
          echo "Fortify Scan completed!"
          echo "Tenant: ${{ secrets.FORTIFY_TENENT }}"
          echo "Release: SalesforceQA:test"
          ls -lh ./fortify_scan_report.fpr

      # Step 7: Upload Fortify scan report as GitHub artifact
      - name: Upload Fortify Scan Report
        uses: actions/upload-artifact@v4
        with:
          name: FortifyScanReport
          path: ./fortify_scan_report.fpr

