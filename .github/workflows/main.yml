name: Salesforce QA Pipeline with Fortify

on:
  push:
    branches:
      - build/QA
  pull_request:
    branches:
      - build/QA

jobs:
  fortify-scan:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source code
      
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install Salesforce CLI
        run: npm install -g @salesforce/cli sfdx-cli

      - name: Authenticate to Salesforce Org
        run: |
          sfdx auth:jwt:grant \
            --clientid ${{ secrets.CONSUMER_KEY }} \
            --jwtkeyfile asset/server.key \
            --username minuscule@admin.com \
            --instanceurl https://login.salesforce.com \
            --setdefaultdevhubusername


      - name: Run Fortify on Demand SAST & SCA Scan
        uses: fortify/github-action@v2
        id: fortify-sast-sca-scan
        with:
          sast-scan: true
          debricked-sca-scan: true
        env:
          # Use FOD_API for the API URL
          FOD_API: https://api.trial.fortify.com
          # Corrected syntax for secrets
          FOD_TENANT: ${{ secrets.FORTIFY_TENANT }}
          FOD_USER: ${{ secrets.FORTIFY_USERNAME }}
          FOD_PASSWORD: ${{ secrets.FORTIFY_PASSWORD }}
          FOD_APPVERSION: SalesforceQA:test 
          FOD_SCAN_TARGET: ./force-app/main/default/classes
          DO_WAIT: true
          DO_EXPORT: true

      - name: Test on Demand SAST & SCA Scan
        run: |
          echo "Testing FoD login..."
          RESPONSE=$(curl -s -X POST "$FOD_API/oauth/token" \
            -H "Content-Type: application/x-www-form-urlencoded" \
            -d "grant_type=password" \
            -d "username=$FOD_USER" \
            -d "password=$FOD_PASSWORD" \
            -d "tenant=$FOD_TENANT")
          echo "Response from FoD API:"
          echo $RESPONSE

          # Simple check
          if echo "$RESPONSE" | grep -q "access_token"; then
            echo "✅ Login successful!"
          else
            echo "❌ Login failed. Check credentials or trial restrictions."
            exit 1
          fi
    

      # - name: Find all SARIF files
      #   run: find . -name "*.sarif" -exec ls -la {} +

      # - name: Upload Fortify Scan Report Artifact 
      #   uses: actions/upload-artifact@v4
      #   with:
      #     name: fortify-sast-report
      #     path: gh-fortify-sast.sarif 
      #     if-no-files-found: error #

      # - name: Upload Fortify Scan Report Artifact # This is where you add the upload step
      #   uses: actions/upload-artifact@v4
      #   with:
      #     name: fortify-sast-report # Name of the artifact
      #     path: gh-fortify-sast.sarif # Path to the generated SARIF file
      #     if-no-files-found: warn # Set to 'warn' or 'error' if you want it to fail if no file is found

      
      # - name: Fortify AST Scan
      #   id: fortify-scan
      #   # Use the base version of the action to pass configuration via environment variables
      #   uses: fortify/github-action@v2
      #   with:
      #     # Tell the action to perform a SAST scan
      #     sast-scan: true
      #   env:
      #     FOD_API: https://api.trial.fortify.com
      #     FOD_API_TOKEN: ${{ secrets.FORTIFY_SECRET_KEY }}
      #     FOD_USERNAME: ${{ secrets.FORTIFY_USERNAME }}           
      #     FOD_PASSWORD: ${{ secrets.FORTIFY_PASSWORD }}           
      #     FOD_TENANT: ${{ secrets.FORTIFY_TENANT }}
      #     # This is how you configure the application and version for FoD
      #     FOD_APPVERSION: SalesforceQA:test 
      #     # The file/folder to scan is passed as an environment variable
      #     FOD_SCAN_TARGET:  ./force-app/main/default/classes
      #     # This is the environment variable to enable SARIF output
      #     FORTIFY_SARIF_ENABLE: true
      #     # This is the standard output filename
      #     FORTIFY_SARIF_FILE: gh-fortify-sast.sarif
          
      # - name: Upload Fortify Scan Report
      #   uses: actions/upload-artifact@v4
      #   with:
      #     name: fortify-sast-report
      #     path: gh-fortify-sast.sarif
      #     # Add this to upload the file even if the Fortify scan fails
      #     if-no-files-found: warn

